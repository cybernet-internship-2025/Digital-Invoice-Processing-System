version: '3.8'

services:

  # ----- DATABASES -----

  invoice-db:
    image: postgres:16
    container_name: invoice-db
    environment:
      POSTGRES_DB: ${DB_NAME_INVOICE}
      POSTGRES_USER: ${DB_USERNAME_INVOICE}
      POSTGRES_PASSWORD: ${DB_PASSWORD_INVOICE}
    ports:
      - "5433:5432"
    volumes:
      - invoice-db-data:/var/lib/postgresql/data
    networks:
      - backend


  notification-db:
    image: mongo:7.0.4
    container_name: notification-db
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: notification-service
    volumes:
      - notification-db-data:/data/db
    networks:
      - backend


  user-db:
    image: postgres:16
    container_name: user-db
    environment:
      POSTGRES_DB: ${DB_NAME_USER}
      POSTGRES_USER: ${DB_USERNAME_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD_USER}
    ports:
      - "5434:5432"
    volumes:
      - user-db-data:/var/lib/postgresql/data
    networks:
      - backend

  # ----- KAFKA & ZOOKEEPER -----


  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - backend

  kafka:
    image: wurstmeister/kafka:2.13-2.8.0
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - backend

  # ----- SERVICES -----

  user-management-service:
    build:
      context: ./user-management
      dockerfile: Dockerfile
    container_name: user-management-service
    depends_on:
      - user-db
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://user-db:5432/${DB_NAME_USER}
      SPRING_DATASOURCE_USERNAME: ${DB_USERNAME_USER}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD_USER}
      SPRING_APPLICATION_NAME: user-management-service
      SERVER_PORT: 8080
    ports:
      - "8081:8080"
    networks:
      - backend

  invoice-service:
    build:
      context: ./invoice
      dockerfile: Dockerfile
    container_name: invoice-service
    depends_on:
      - invoice-db
      - user-management-service
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://invoice-db:5432/${DB_NAME_INVOICE}
      SPRING_DATASOURCE_USERNAME: ${DB_USERNAME_INVOICE}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD_INVOICE}
      USER_MANAGEMENT_URL: http://user-management-service:8080
      SPRING_APPLICATION_NAME: invoice-service
      SERVER_PORT: 8080
    ports:
      - "8082:8080"
    networks:
      - backend

  notification-service:
    build:
      context: ./notification-service
      dockerfile: Dockerfile
    container_name: notification-service
    depends_on:
      - kafka
      - notification-db
    environment:
      SPRING_DATA_MONGODB_URI: mongodb://root:password@notification-db:27017/notification-service?authSource=admin
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SPRING_APPLICATION_NAME: notification-service
      SERVER_PORT: 8083
    ports:
      - "8083:8083"
    networks:
      - backend

networks:
  backend:
    driver: bridge

volumes:
  invoice-db-data:
  user-db-data:
  notification-db-data: