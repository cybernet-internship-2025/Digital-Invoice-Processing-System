<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="az.cybernet.invoice.repository.InvoiceRepository">

    <!-- RESULT MAPS -->
    <resultMap id="InvoiceResultMap" type="az.cybernet.invoice.entity.InvoiceEntity">
        <id property="id" column="c_id"/>
        <result property="senderTaxId" column="c_sender_tax_id"/>
        <result property="recipientTaxId" column="c_recipient_tax_id"/>
        <result property="totalPrice" column="c_total_price"/>
        <result property="invoiceNumber" column="c_invoice_number"/>
        <result property="invoiceSeries" column="c_invoice_series"/>
        <result property="status" column="c_status" typeHandler="az.cybernet.invoice.handler.InvoiceStatusTypeHandler"/>
        <result property="createdAt" column="c_created_at"/>
        <result property="updatedAt" column="c_updated_at"/>
        <result property="isActive" column="c_is_active"/>

        <collection property="items" ofType="az.cybernet.invoice.entity.ItemEntity">
            <id property="id" column="i_id"/>
            <result property="name" column="i_name"/>
            <result property="unitPrice" column="i_unit_price"/>
            <result property="quantity" column="i_quantity"/>
            <result property="totalPrice" column="i_total_price"/>
            <result property="isActive" column="i_is_active"/>
        </collection>

        <collection property="operations" ofType="az.cybernet.invoice.entity.OperationEntity">
            <id property="id" column="o_id"/>
            <result property="status" column="o_status"/>
<!--            <result property="comment" column="o_comment"/>-->
            <result property="createdAt" column="o_created_at"/>
        </collection>

    </resultMap>

    <!-- INSERT -->
    <insert id="saveInvoice" parameterType="az.cybernet.invoice.entity.InvoiceEntity"
            useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        INSERT INTO invoices (sender_tax_id, recipient_tax_id, total_price, invoice_number, invoice_series,
                              status, created_at, updated_at, is_active)
        VALUES (#{senderTaxId}, #{recipientTaxId}, #{totalPrice}, #{invoiceNumber}, #{invoiceSeries},
                'DRAFT', NOW(), NULL, true)
    </insert>

    <select id="getNextInvoiceSequence" resultType="long">
        SELECT nextval('invoice.invoice_number_seq')
    </select>

    <update id="updateInvoiceStatus" parameterType="map">
        UPDATE invoices
        SET status = #{status},
            updated_at = #{updatedAt}
        WHERE id = #{id}
    </update>

    <update id="updateTotalPrice" parameterType="map">
        UPDATE invoices
        SET total_price = #{totalPrice}
        WHERE id = #{invoiceId}
    </update>

    <select id="findAllInvoicesByRecipientUserTaxId" resultMap="InvoiceResultMap" parameterType="string">
        SELECT c.id               AS c_id,
               c.sender_tax_id    AS c_sender_tax_id,
               c.recipient_tax_id AS c_recipient_tax_id,
               c.total_price      AS c_total_price,
               c.is_active        AS c_is_active,
               c.invoice_number   AS c_invoice_number,
               c.invoice_series   AS c_invoice_series,
               c.status           AS c_status,
               c.created_at       AS c_created_at,
               c.updated_at       AS c_updated_at,

               i.id               AS i_id,
               i.name             AS i_name,
               i.unit_price       AS i_unit_price,
               i.is_active        AS i_is_active,
               i.quantity         AS i_quantity,
               i.total_price      AS i_total_price,
               i.invoice_id       AS i_invoice_id

        FROM invoices c
                 LEFT JOIN items i ON c.id = i.invoice_id AND i.is_active = true
        WHERE c.recipient_tax_id = #{recipientTaxId}
          AND c.is_active = true
          AND c.status IN ('PENDING', 'APPROVED', 'CANCELED', 'CORRECTION')
    </select>

    <!-- SELECT BY ID -->
    <select id="findById" resultMap="InvoiceResultMap" parameterType="long">
        SELECT c.id               AS c_id,
               c.sender_tax_id    AS c_sender_tax_id,
               c.recipient_tax_id AS c_recipient_tax_id,
               c.total_price      AS c_total_price,
               c.invoice_number   AS c_invoice_number,
               c.is_active        AS c_is_active,
               c.invoice_series   AS c_invoice_series,
               c.status           AS c_status,
               c.created_at       AS c_created_at,
               c.updated_at       AS c_updated_at,

               i.id               AS i_id,
               i.name             AS i_name,
               i.unit_price       AS i_unit_price,
               i.is_active        AS i_is_active,
               i.quantity         AS i_quantity,
               i.total_price      AS i_total_price,
               i.invoice_id       AS i_invoice_id,

               o.id               AS o_id,
               o.status           AS o_status,
               o.comment          AS o_comment,
               o.created_at       AS o_created_at

        FROM invoices c
                 LEFT JOIN items i ON c.id = i.invoice_id AND i.is_active = true
                 LEFT JOIN operations o ON o.item_id = i.id
        WHERE c.id = #{id}
          AND c.is_active = true
          AND c.status IN ('PENDING', 'APPROVED', 'CANCELED', 'CORRECTION','DRAFT')
    </select>

    <update id="restoreInvoice" parameterType="long">
        UPDATE invoices
        SET status     = 'DRAFT',
            is_active  = true,
            updated_at = NOW()
        WHERE id = #{id}
          AND c.status IN ('CANCELED')
    </update>


    <update id="deleteInvoiceById" parameterType="long">
        update invoices
        set is_active = false
        where id = #{id}
    </update>

    <update id="updateInvoiceRecipientTaxId">
        update invoices
        set recipient_tax_id = #{recipientTaxId},
            updated_at = current_timestamp
        where id = #{invoiceId}
            and is_active = true
    </update>

    <update id="changeStatus">
        update invoices
        set status = #{status},
            updated_at = current_timestamp
        where id = #{invoiceId}
    </update>

    <select id="findByIdAndReceiverTaxId" resultMap="InvoiceResultMap">
        SELECT c.id               AS c_id,
        c.sender_tax_id    AS c_sender_tax_id,
        c.recipient_tax_id AS c_recipient_tax_id,
        c.total_price      AS c_total_price,
        c.is_active        AS c_is_active,
        c.invoice_number   AS c_invoice_number,
        c.invoice_series   AS c_invoice_series,
        c.status           AS c_status,
        c.created_at       AS c_created_at,
        c.updated_at       AS c_updated_at,

        i.id               AS i_id,
        i.name             AS i_name,
        i.unit_price       AS i_unit_price,
        i.is_active        AS i_is_active,
        i.quantity         AS i_quantity,
        i.total_price      AS i_total_price,
        i.invoice_id       AS i_invoice_id
        from invoices c
        left join items i
        on i.invoice_id = c.id
            and i.is_active = true
        where c.id = #{invoiceId}
        and c.recipient_tax_id = #{receiverTaxId}
        and c.is_active = true

    </select>

    <select id="findInvoicesBySenderTaxId"
            resultMap="InvoiceResultMap">


        SELECT
        c.id               AS c_id,
        c.sender_tax_id    AS c_sender_tax_id,
        c.recipient_tax_id AS c_recipient_tax_id,
        c.total_price      AS c_total_price,
        c.is_active        AS c_is_active,
        c.invoice_number   AS c_invoice_number,
        c.invoice_series   AS c_invoice_series,
        c.status           AS c_status,
        c.created_at       AS c_created_at,
        c.updated_at       AS c_updated_at,

        i.id               AS i_id,
        i.name             AS i_name,
        i.unit_price       AS i_unit_price,
        i.is_active        AS i_is_active,
        i.quantity         AS i_quantity,
        i.total_price      AS i_total_price,
        i.invoice_id       AS i_invoice_id

        FROM invoices c
        LEFT JOIN items i ON c.id = i.invoice_id AND i.is_active = true

        WHERE c.is_active = true
        AND c.sender_tax_id = #{senderTaxId}

        <if test="filter.status != null">
            AND LOWER(c.status) = LOWER(#{filter.status})
        </if>

        <if test="filter.fromDate != null">
            AND c.created_at &gt;= #{filter.fromDate}
        </if>

        <if test="filter.toDate != null">
            AND c.created_at &lt;= #{filter.toDate}
        </if>

        <if test="filter.year != null">
            AND EXTRACT(YEAR FROM c.created_at) = #{filter.year}
        </if>

        <if test="filter.series != null">
            AND c.invoice_series = #{filter.series}
        </if>

        <if test="filter.number != null">
            AND c.invoice_number = #{filter.number}
        </if>

        ORDER BY c.created_at DESC

        <if test="filter.limit != null and filter.offset != null">
            LIMIT #{filter.limit} OFFSET #{filter.offset}
        </if>



    </select>

    <update id="refreshInvoice" parameterType="Long">
        update invoices
        set updated_at = current_timestamp
        where id = #{invoiceId}
    </update>


</mapper>
